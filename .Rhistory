Sys.setenv(GCE_AUTH_FILE = account_key,
GCE_DEFAULT_PROJECT_ID = project,
GCE_DEFAULT_ZONE = zone)
gce_auth()
setwd("~/Github/Precision-Forecasts-of-Land-Cover-Change")
Sys.setenv(GCE_AUTH_FILE = account_key,
GCE_DEFAULT_PROJECT_ID = project,
GCE_DEFAULT_ZONE = zone)
gce_auth()
Sys.setenv(GCE_AUTH_FILE = account_key,
GCE_DEFAULT_PROJECT_ID = project,
GCE_DEFAULT_ZONE = zone)
vignette('installation-and-authentication', package = 'googleComputeEngineR')
gce_get_project()
gce_global_project(project)
# Setup
project <-"Practicum"
zone <- "us-east4-a"
account_key <- "gcs-key.json"
Sys.setenv(GCE_AUTH_FILE = account_key,
GCE_DEFAULT_PROJECT_ID = project,
GCE_DEFAULT_ZONE = zone)
gce_auth()
#set default global project
gce_global_project(project)
gce_global_zone(zone)
#set default global project
gce_global_project()
account_key <- "~/Github/Precision-Forecasts-of-Land-Cover-Change/gcs-key.json"
Sys.setenv(GCE_AUTH_FILE = account_key,
GCE_DEFAULT_PROJECT_ID = project,
GCE_DEFAULT_ZONE = zone)
gce_auth()
#set default global project
gce_global_project(project)
# Setup
project <-"rstudio"
zone <- "us-east4-a"
account_key <- "~/Github/Precision-Forecasts-of-Land-Cover-Change/gcs-key.json"
Sys.setenv(GCE_AUTH_FILE = account_key,
GCE_DEFAULT_PROJECT_ID = project,
GCE_DEFAULT_ZONE = zone)
gce_auth()
#set default global project
gce_global_project(project)
gce_global_zone(zone)
default_project <- gce_get_project('rstudio')
default_project$name
vm <- gce_vm(
template = "rstudio",
name = "rstudio",
username = "rstudio",
password = "rrr",
predefined_type = "c3-highcpu-4"
)
my_rstudio <-gce_vm("rstudio")
# Setup
project <-"rstudio"
zone <- "us-east4-a"
account_key <- "~/Github/Precision-Forecasts-of-Land-Cover-Change/gcs-key.json"
Sys.setenv(GCE_AUTH_FILE = account_key,
GCE_DEFAULT_PROJECT_ID = project,
GCE_DEFAULT_ZONE = zone)
gce_auth()
#set default global project
gce_global_project(project)
gce_global_zone(zone)
default_project <- gce_get_project('rstudio')
default_project$name
vm <- gce_vm(
template = "rstudio",
name = "rstudio",
username = "rstudio",
password = "rrr",
predefined_type = "c3-highcpu-4"
)
my_rstudio <-gce_vm("rstudio")
job <- gce_vm_stop("rstudio")
job <-gce_vm_start("rstudio")
# Setup
project <-"practicum"
zone <- "us-east4-a"
account_key <- "~/Github/Precision-Forecasts-of-Land-Cover-Change/gcs-key.json"
Sys.setenv(GCE_AUTH_FILE = account_key,
GCE_DEFAULT_PROJECT_ID = project,
GCE_DEFAULT_ZONE = zone)
gce_auth()
#set default global project
gce_global_project(project)
gce_global_zone(zone)
default_project <- gce_get_project('practicum')
project <-"rstudio"
zone <- "us-east4-a"
account_key <- "~/Github/Precision-Forecasts-of-Land-Cover-Change/gcs-key.json"
Sys.setenv(GCE_AUTH_FILE = account_key,
GCE_DEFAULT_PROJECT_ID = project,
GCE_DEFAULT_ZONE = zone)
gce_auth()
#set default global project
gce_global_project(project)
gce_global_zone(zone)
default_project <- gce_get_project('practicum')
default_project <- gce_get_project(project)
# Setup
project <-"276693978614-compute"
zone <- "us-east4-a"
account_key <- "~/Github/Precision-Forecasts-of-Land-Cover-Change/gcs-key.json"
Sys.setenv(GCE_AUTH_FILE = account_key,
GCE_DEFAULT_PROJECT_ID = project,
GCE_DEFAULT_ZONE = zone)
gce_auth()
#set default global project
gce_global_project(project)
gce_global_zone(zone)
default_project <- gce_get_project(project)
default_project$name
vm <- gce_vm(
template = "rstudio",
name = "rstudio",
username = "rstudio",
password = "rrr",
predefined_type = "c3-highcpu-4"
)
my_rstudio <-gce_vm("rstudio")
job <- gce_vm_stop("rstudio")
job <-gce_vm_start("rstudio")
# Setup
project <-"plenary-magpie-338714"
zone <- "us-east4-a"
account_key <- "~/Github/Precision-Forecasts-of-Land-Cover-Change/gcs-key.json"
Sys.setenv(GCE_AUTH_FILE = account_key,
GCE_DEFAULT_PROJECT_ID = project,
GCE_DEFAULT_ZONE = zone)
gce_auth()
#set default global project
gce_global_project(project)
gce_global_zone(zone)
default_project <- gce_get_project(project)
default_project$name
vm <- gce_vm(
template = "rstudio",
name = "rstudio",
username = "rstudio",
password = "rrr",
predefined_type = "c3-highcpu-4"
)
install.packages("httr")
install.packages("httr")
project <-"plenary-magpie-338714"
zone <- "us-east4-a"
account_key <- "~/Github/Precision-Forecasts-of-Land-Cover-Change/gcs-key.json"
Sys.setenv(GCE_AUTH_FILE = account_key,
GCE_DEFAULT_PROJECT_ID = project,
GCE_DEFAULT_ZONE = zone)
library(googleComputeEngineR)
project <-"plenary-magpie-338714"
zone <- "us-east4-a"
account_key <- "~/Github/Precision-Forecasts-of-Land-Cover-Change/gcs-key.json"
Sys.setenv(GCE_AUTH_FILE = account_key,
GCE_DEFAULT_PROJECT_ID = project,
GCE_DEFAULT_ZONE = zone)
gce_auth()
gce_global_project(project)
gce_global_zone(zone)
default_project <- gce_get_project(project)
rlang::last_error()
rlang::last_trace()
default_project <- gce_get_project(project)
default_project$name
gce_global_project(project)
gce_global_zone(zone)
default_project <- gce_get_project(project)
default_project$name
vm <- gce_vm(
template = "rstudio",
name = "rstudio",
username = "rstudio",
password = "rrr",
predefined_type = "c3-highcpu-4"
)
my_rstudio <-gce_vm("rstudio")
job <- gce_vm_stop("rstudio")
job <-gce_vm_start("rstudio")
# R setup
```{r setup, include=FALSE}
library(tidyverse)
library(tmap)
library(sf)
library(raster)
library(knitr)
library(kableExtra)
library(tidycensus)
library(tigris)
library(FNN)
library(caret)
library(yardstick)
library(pscl)
library(ggrepel)
library(pROC)
library(grid)
library(gridExtra)
library(igraph)
library(exactextractr)
library(geojsonsf)
library(stars)
library(starsExtra)
library(mapview)
library(glue)
plotTheme <- theme(
plot.title =element_text(size=12),
plot.subtitle = element_text(size=8),
plot.caption = element_text(size = 6),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 10),
# Set the entire chart region to blank
panel.background=element_blank(),
plot.background=element_blank(),
#panel.border=element_rect(colour="#F0F0F0"),
# Format the grid
panel.grid.major=element_line(colour="#D0D0D0",size=.75),
axis.ticks=element_blank())
mapTheme <- theme(plot.title =element_text(size=12),
plot.subtitle = element_text(size=8),
plot.caption = element_text(size = 6),
axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_line(colour = 'transparent'),
panel.grid.minor=element_blank(),
legend.direction = "vertical",
legend.position = "right",
plot.margin = margin(1, 1, 1, 1, 'cm'),
legend.key.height = unit(1, "cm"), legend.key.width = unit(0.2, "cm"))
palette2 <- c("#41b6c4","#253494")
palette4 <- c("#a1dab4","#41b6c4","#2c7fb8","#253494")
palette5 <- c("#ffffcc","#a1dab4","#41b6c4","#2c7fb8","#253494")
palette10 <- c("#f7fcf0","#e0f3db","#ccebc5","#a8ddb5","#7bccc4",
"#4eb3d3","#2b8cbe","#0868ac","#084081","#f7fcf0")
mv<- mapview
g <- glimpse
knitr::opts_chunk$set(echo = TRUE, cache = TRUE)
isle_14 <- read_stars("~/Github/Precision-Forecasts-of-Land-Cover-Change/Data/lc/islelc_14_10x10.tif")
isle_18 <- read_stars("~/Github/Precision-Forecasts-of-Land-Cover-Change/Data/lc/islelc_18_10x10.tif")
isle_area <- st_read("~/Github/Precision-Forecasts-of-Land-Cover-Change/Data/boundary/Isle_of_Wight.shp")
# Transform the test area object to the same CRS as the raster image
isle_area <- isle_area %>%
st_transform(crs = st_crs(isle_14))
# Crop the re-sampled raster image to the test area
isle_14_10_crop <- st_crop(isle_14, isle_area)
isle_18_10_crop <- st_crop(isle_18, isle_area)
isle_change_rc <- (isle_18_10_rc - isle_14_10_rc)
vm <- gce_vm(
template = "rstudio",
name = "rstudio",
username = "rstudio",
password = "rrr",
predefined_type = "c3-highcpu-4"
)
my_rstudio <-gce_vm("rstudio")
(
template = "rstudio",
library(googleComputeEngineR)
# Setup
project <-"plenary-magpie-338714"
zone <- "us-east4-a"
account_key <- "~/Github/Precision-Forecasts-of-Land-Cover-Change/gcs-key.json"
Sys.setenv(GCE_AUTH_FILE = account_key,
GCE_DEFAULT_PROJECT_ID = project,
GCE_DEFAULT_ZONE = zone)
gce_auth()
#set default global project
gce_global_project(project)
gce_global_zone(zone)
default_project <- gce_get_project(project)
default_project$name
vm <- gce_vm(
template = "rstudio",
name = "rstudio",
username = "rstudio",
password = "rrr",
predefined_type = "c3-highcpu-4"
)
my_rstudio <-gce_vm("rstudio")
job <- gce_vm_stop("rstudio")
job <-gce_vm_start("rstudio")
library(googleComputeEngineR)
# Setup
project <-"plenary-magpie-338714"
zone <- "us-east4-a"
account_key <- "~/Github/Precision-Forecasts-of-Land-Cover-Change/gcs-key.json"
Sys.setenv(GCE_AUTH_FILE = account_key,
GCE_DEFAULT_PROJECT_ID = project,
GCE_DEFAULT_ZONE = zone)
gce_global_project(project)
gce_global_zone(zone)
default_project <- gce_get_project(project)
Sys.setenv(GCE_AUTH_FILE = account_key,
GCE_DEFAULT_PROJECT_ID = project,
GCE_DEFAULT_ZONE = zone)
gce_auth()
gce_global_project(project)
gce_global_zone(zone)
default_project <- gce_get_project(project)
default_project$name
vm <- gce_vm(
template = "rstudio",
name = "rstudio",
username = "rstudio",
password = "rrr",
predefined_type = "c3-highcpu-4"
)
my_rstudio <-gce_vm("rstudio")
job <-gce_vm_start("rstudio")
gce_vm_start("rstudio")
gce_global_project(project)
gce_global_zone(zone)
default_project <- gce_get_project(project)
default_project$name
vm <- gce_vm(
template = "rstudio",
name = "rstudio",
username = "rstudio",
password = "rrr",
predefined_type = "c3-highcpu-4"
)
gce_global_project(project)
gce_global_zone(zone)
default_project <- gce_get_project(project)
default_project$name
vm <- gce_vm(
template = "rstudio",
name = "rstudio",
username = "rstudio",
password = "rrr",
predefined_type = "c3-highcpu-4"
)
gce_vm("rstudio")
my_rstudio
project <-"plenary-magpie-338714"
zone <- "us-east4-a"
account_key <- "~/Github/Precision-Forecasts-of-Land-Cover-Change/gcs-key.json"
Sys.setenv(GCE_AUTH_FILE = account_key,
GCE_DEFAULT_PROJECT_ID = project,
GCE_DEFAULT_ZONE = zone)
library(googleComputeEngineR)
gce_auth()
#set default global project
gce_global_project(project)
gce_global_zone(zone)
default_project <- gce_get_project(project)
default_project$name
vm <- gce_vm(
template = "rstudio",
name = "rstudio",
username = "rstudio",
password = "rrr",
predefined_type = "c3-highcpu-4"
)
my_rstudio <-gce_vm("rstudio")
vm
vm
vm
force(gce_vm_gpu)
View(gce_get_firewall_rule)
usethis::edit_r_profile()
project <-"plenary-magpie-338714"
zone <- "us-east4-a"
account_key <- "~/Github/Precision-Forecasts-of-Land-Cover-Change/gcs-key.json"
Sys.setenv(GCE_AUTH_FILE = account_key,
GCE_DEFAULT_PROJECT_ID = project,
GCE_DEFAULT_ZONE = zone)
library(googleComputeEngineR)
gce_auth()
#set default global project
gce_global_project(project)
gce_global_zone(zone)
default_project <- gce_get_project(project)
default_project$name
vm <- gce_vm(
template = "rstudio",
name = "rstudio",
username = "rstudio",
password = "rrr",
predefined_type = "c3-highcpu-4"
)
my_rstudio <-gce_vm("rstudio")
my_rstudio
View(gce_vm_gpu)
my_rstudio
list.files()
vm <- gce_vm(
template = "rstudio",
name = "rstudio",
username = "rstudio",
password = "rrr",
predefined_type = "c3-highcpu-4"
)
my_rstudio$status
my_rstudio$status
my_rstudio$status
gce_vm_start("rstudio")
my_rstudio$status
vm <- gce_vm(
template = "rstudio",
name = "rstudio",
username = "rstudio",
password = "rrr",
predefined_type = "c3-highcpu-4"
)
my_rstudio <-gce_vm("rstudio")
my_rstudio$status
vm
View(gce_list_firewall_rules)
View(gce_make_firewall_webports)
(gce_make_firewall_webports)
gce_make_firewall_webports()
gce_list_firewall_rules
project <-"plenary-magpie-338714"
zone <- "us-east4-a"
account_key <- "~/Github/Precision-Forecasts-of-Land-Cover-Change/gcs-key.json"
Sys.setenv(GCE_AUTH_FILE = account_key,
GCE_DEFAULT_PROJECT_ID = project,
GCE_DEFAULT_ZONE = zone)
library(googleComputeEngineR)
library(googleComputeEngineR)
gce_list_instances()
project <-"plenary-magpie-338714"
zone <- "us-east4-a"
account_key <- "~/Github/Precision-Forecasts-of-Land-Cover-Change/gcs-key.json"
Sys.setenv(GCE_AUTH_FILE = account_key,
GCE_DEFAULT_PROJECT_ID = project,
GCE_DEFAULT_ZONE = zone)
gce_list_instances()
gce_global_project(project)
gce_global_zone(zone)
gce_list_instances()
project <-"precision-protect"
zone <- "us-east4-a"
account_key <- "~/Github/Precision-Forecasts-of-Land-Cover-Change/gcs-key.json"
Sys.setenv(GCE_AUTH_FILE = account_key,
GCE_DEFAULT_PROJECT_ID = project,
GCE_DEFAULT_ZONE = zone)
library(googleComputeEngineR)
gce_auth()
#set default global project
gce_global_project(project)
gce_global_zone(zone)
default_project <- gce_get_project(project)
R_LIBS=C:/R/library
library(googleComputeEngineR)
gce_global_project(project)
gce_global_zone(zone)
default_project <- gce_get_project(project)
library(googleComputeEngineR)
gce_global_project(project)
gce_global_zone(zone)
default_project <- gce_get_project(project)
shiny::runGadget(sparklyr::connection_spark_shinyapp(), viewer = .rs.embeddedViewer)
library(sparklyr)
library(dplyr)
spark_install(version = "2.4.3", hadoop_version = "2.7")
sc <- spark_connect(master = "local")
if (!require("ghit")) {
install.packages("ghit")
}
ghit::install_github("cloudyr/googleComputeEngineR")
vm <- gce_vm(
template = "rstudio",
name = "rstudio-demo",
username = "rstudio",
password = "rrr"
)
project <-"precision-protect"
zone <- "us-east4-a"
account_key <- "~/gcs-key.json"
Sys.setenv(GCE_AUTH_FILE = account_key,
GCE_DEFAULT_PROJECT_ID = project,
GCE_DEFAULT_ZONE = zone)
library(googleComputeEngineR)
project <-"plenary-magpie-338714"
zone <- "us-east4-a"
account_key <- "~/gcs-key.json"
Sys.setenv(GCE_AUTH_FILE = account_key,
GCE_DEFAULT_PROJECT_ID = project,
GCE_DEFAULT_ZONE = zone)
library(googleComputeEngineR)
gce_global_project(project)
gce_global_zone(zone)
default_project <- gce_get_project(project)
remotes::install_github("MarkEdmondson1234/googleAuthR")
library(googleAuthR)
library(googleComputeEngineR)
#Package installs -------------------------------------------------------------
load.fun <- function(x) {
x <- as.character(x)
if(isTRUE(x %in% .packages(all.available=TRUE))) {
eval(parse(text=paste("require(", x, ")", sep="")))
print(paste(c(x, " : already installed; requiring"), collapse=''))
} else {
#update.packages()
print(paste(c(x, " : not installed; installing"), collapse=''))
eval(parse(text=paste("install.packages('", x, "')", sep="")))
print(paste(c(x, " : installed and requiring"), collapse=''))
eval(parse(text=paste("require(", x, ")", sep="")))
}
}
